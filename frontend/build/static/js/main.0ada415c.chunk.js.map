{"version":3,"sources":["Screens/ProfileCard.module.css","Components/Header.js","Actions/userActions.js","Constants/userConstants.js","Components/Footer.js","Components/FormContainer.js","Components/Loader.js","Components/Message.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/HomeScreen.js","Screens/CreateAddressScreen.js","Screens/HistoryScreen.js","App.js","serviceWorker.js","store.js","Reducers/userReducer.js","index.js"],"names":["module","exports","Header","history","userInfo","useSelector","state","userLogin","dispatch","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","name","Item","onClick","a","localStorage","removeItem","type","push","Link","style","margin","Footer","Row","Col","FormContainer","children","xs","md","Loader","Spinner","animation","role","height","width","display","Message","Alert","LoginScreen","location","React","email","setEmail","password","setPassword","redirect","search","split","loading","error","Form","onSubmit","e","preventDefault","config","headers","axios","post","data","payload","setItem","JSON","stringify","response","details","message","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMesssage","userRegister","detail","register","console","log","required","HomeScreen","CreateAddrressScreen","phone","setPhone","address","setAddress","country","setCountry","city","setCity","setState","postalCode","setPostalCode","accountNumber","setAccountNumber","getState","Authorization","token","Address","HistoryScreen","useState","useEffect","Table","striped","responsive","username","App","path","component","exact","Boolean","window","hostname","match","reducer","combineReducers","action","userAddress","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0ada415c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"ProfileCard_Background__z_jpn\",\"ProfileCard\":\"ProfileCard_ProfileCard__3ZDUN\",\"ProfileCardBody\":\"ProfileCard_ProfileCardBody__zOxzk\",\"ProfileCardBackgroundImage\":\"ProfileCard_ProfileCardBackgroundImage__1J8Xe\",\"ProfileCardImage\":\"ProfileCard_ProfileCardImage__2f0X6\",\"TextMuted\":\"ProfileCard_TextMuted__2xGuq\",\"TextBold\":\"ProfileCard_TextBold__4_qfn\",\"CardFooter\":\"ProfileCard_CardFooter__T9GNf\",\"FooterP\":\"ProfileCard_FooterP__3s9bx\"};","import { Navbar,Nav,Container,NavDropdown} from \"react-bootstrap\";\r\nimport {LinkContainer,} from 'react-router-bootstrap'\r\nimport { FaUser} from 'react-icons/fa'\r\n// @flow strict\r\n\r\nimport  React from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { logout } from \"../Actions/userActions\";\r\n\r\nfunction Header({history}) {\r\n\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const dispatch = useDispatch()\r\n\r\n    const Logout = ()=>{\r\n        dispatch(logout())\r\n        history.push('/')\r\n       \r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Navbar  bg=\"dark\" variant=\"dark\"expand=\"lg\" collapseOnSelect>\r\n                    <Container>\r\n                    <LinkContainer to='/'>\r\n                    <Navbar.Brand>Promordial Escrow services</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                        {userInfo ? (\r\n                                    <NavDropdown title={userInfo.name} id=\"username\">\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item >\r\n                                            Profile\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Item onClick={Logout}>Logout</NavDropdown.Item>\r\n\r\n                                    </NavDropdown> \r\n                                ): <LinkContainer to='/login'>\r\n                                <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                            </LinkContainer>}\r\n                            {!userInfo && (\r\n                                <LinkContainer to='/login'>\r\n                                <Nav.Link><FaUser style={{margin: \"5\"}}/>Login</Nav.Link>\r\n                            </LinkContainer>\r\n                            )}\r\n                          \r\n\r\n                          {!userInfo && (\r\n                                <LinkContainer to='/register'>\r\n                                <Nav.Link><FaUser style={{margin: \"5\"}}/>sign up</Nav.Link>\r\n                            </LinkContainer>\r\n                            )}\r\n                          \r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n\r\n                    \r\n                    </Container>\r\n\r\n\r\n                </Navbar>\r\n            </header>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import {\r\n    USER_LOGIN_REQUEST,\r\nUSER_LOGIN_SUCCESS,USER_LOGIN_FAIL,\r\nUSER_LOGOUT,\r\n\r\n\r\nUSER_REGISTER_SUCCESS,\r\nUSER_REGISTER_REQUEST,\r\nUSER_REGISTER_FAIL,\r\n\r\nUSER_CREATE_ADRESS_SUCCESS,\r\nUSER_CREATE_ADRESS_REQUEST,\r\nUSER_CREATE_ADRESS_FAIL,\r\n\r\nUSER_DETAILS_REQUEST,\r\nUSER_DETAILS_SUCCESS,\r\nUSER_DETAILS_FAIL,\r\nUSER_DETAILS_RESET,\r\n\r\n} from  '../Constants/userConstants'\r\n\r\nimport axios from \"axios\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'http://127.0.0.1:8000/api/user/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.details\r\n                ? error.response.data.details\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n\r\n}\r\n\r\n\r\nexport const register = (name,email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'http://127.0.0.1:8000/api/user/register/',\r\n            { 'name':name, 'email':email, 'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `http://127.0.0.1:8000/api/user/${id}/`\r\n            ,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const Address = (phone,address,country,city,state,postalCode,accountNumber) => async (dispatch,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_CREATE_ADRESS_REQUEST\r\n        })\r\n\r\n        \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            'http://127.0.0.1:8000/api/user/create/address/',\r\n            { phone, address, country, city, state, postalCode,accountNumber},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_CREATE_ADRESS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_CREATE_ADRESS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT= 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST= 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS= 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL= 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_CREATE_ADRESS_REQUEST= 'USER_CREATE_ADRESS_REQUEST'\r\nexport const USER_CREATE_ADRESS_SUCCESS= 'USER_CREATE_ADRESS_SUCCESS'\r\nexport const USER_CREATE_ADRESS_FAIL= 'USER_CREATE_ADRESS_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST= 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS= 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL= 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET= 'USER_DETAILS_RESET'\r\n","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport { Container,Col,Row } from \"react-bootstrap\";\r\n\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                \r\n                <Row>\r\n                <appBar/>\r\n                <Col className=\"text-center py-3\">Copyright &copy;</Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","// @flow strict\r\n\r\nimport React from 'react';\r\nimport { Container,Row,Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>{children}</Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;","// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role=\"status\"\r\n            style={{\r\n                height: '100px',\r\n                width: \"100px\",\r\n                margin: 'auto',\r\n                display : 'block',\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;","// @flow strict\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nimport * as React from 'react';\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default Message;","// @flow strict\r\n// @flow strict\r\n\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { login } from '../Actions/userActions';\r\n\r\nimport FormContainer from '../Components/FormContainer';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\n\r\n\r\nfunction LoginScreen({history,location}) {\r\n    const [email, setEmail] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n\r\n    const redirect = location.search ? location.search.split('m')[1] : '/'\r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {loading,error,userInfo} = userLogin\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    React.useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n      \r\n    }, [history,userInfo,redirect])\r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email,password))\r\n    \r\n    }\r\n  \r\n    return (\r\n        <>\r\n            \r\n            \r\n                <FormContainer>\r\n\r\n                    \r\n                <h1>Sign In</h1>\r\n\r\n                \r\n            {error && <Message variant=\"danger\">Incorrect Password or username</Message>}\r\n            {loading && <Loader/>}\r\n                \r\n    \r\n    \r\n    \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>UserName</Form.Label>\r\n                        <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your username here\"\r\n                        value={email} \r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your Password here\"\r\n                        value={password} \r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">Sign In</Button>\r\n    \r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                        New Customer? <Link  to={'/register'}>Register</Link>\r\n                    </Col>\r\n                </Row>\r\n                </FormContainer>\r\n       \r\n            \r\n        </>\r\n       \r\n    )\r\n};\r\n\r\nexport default LoginScreen;","\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { register } from '../Actions/userActions';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\n\r\n\r\n\r\n\r\nfunction RegisterScreen({location,history}) {\r\n    const [name, setName] = React.useState('')\r\n    const [email, setEmail] = React.useState('')\r\n    const [password, setPassword] = React.useState('')\r\n    const [confirmPassword, setConfirmPassword] = React.useState('')\r\n    const [message, setMesssage] = React.useState('')\r\n\r\n\r\n    //const redirect = location.search ? location.search.split('m')[1] : '/createAddress'\r\n    \r\n    \r\n   \r\n    const userRegister = useSelector(state=> state.userRegister)\r\n    const {loading,error,userInfo} = userRegister\r\n    const dispatch = useDispatch()\r\n    \r\n    React.useEffect(()=>{\r\n        if(userInfo){\r\n            history.push('/')\r\n        }\r\n    }, [history,userInfo])\r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMesssage('password does not match')\r\n        }else{\r\n            dispatch(register(name,email,password))\r\n        }\r\n        history.push(\"/createAddress\")\r\n       console.log(\"register\")\r\n         \r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <h1>Register</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader/>}\r\n        \r\n        {message && <Message variant=\"danger\">{message}</Message> }\r\n           \r\n\r\n            \r\n             <Form onSubmit={submitHandler}>\r\n             <Form.Group controlId=\"name\">\r\n                    <Form.Label>UserName</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Username here\"\r\n                    value={name} \r\n                    onChange={(e)=>setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your Email here\"\r\n                    value={email} \r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your Password here\"\r\n                    value={password} \r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword} \r\n                    onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Button type=\"submit\" variant=\"primary\"  >Continue</Button>\r\n                </Form.Group>\r\n\r\n             </Form>\r\n             <Row className=\"py-3\">\r\n                <Col>\r\n                    Already have ancount? <Link  to=\"/login\">Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default RegisterScreen;","// @flow strict\r\n\r\nimport  React,{useEffect} from 'react';\r\n//import {useDispatch,useSelector} from 'react-redux'\r\n\r\nimport {Row,Col,Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\n//import Loader from '../Components/Loader';\r\n//import Message  from '../Components/Message';\r\n\r\n\r\n\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n\r\n    \r\n    return (\r\n    \r\n        \r\n       \r\n            \r\n                <>\r\n                    \r\n            <div>\r\n                <Row>\r\n                    \r\n                    \r\n\r\n                  \r\n                </Row>\r\n              \r\n            </div>\r\n\r\n                </>\r\n        \r\n            \r\n     \r\n          \r\n\r\n\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default HomeScreen;","\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row,Col,Form,Button } from \"react-bootstrap\";\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Address } from '../Actions/userActions';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport Message from '../Components/Message';\r\nimport Loader from '../Components/Loader';\r\n\r\n\r\n\r\n\r\nfunction CreateAddrressScreen({location,history}) {\r\n    const [phone, setPhone] = React.useState('')\r\n    const [address, setAddress] = React.useState('')\r\n    const [country, setCountry] = React.useState('')\r\n    const [city, setCity] = React.useState('')\r\n    const [state, setState] = React.useState('')\r\n    const [postalCode, setPostalCode] = React.useState('')\r\n    const [accountNumber, setAccountNumber] = React.useState('')\r\n    const [message, setMesssage] = React.useState('')\r\n\r\n\r\n    //const redirect = location.search ? location.search.split('m')[1] : '/'\r\n    \r\n    \r\n   \r\n    const userLogin = useSelector(state=> state.userLogin)\r\n    const {loading,error,userInfo} = userLogin\r\n    const dispatch = useDispatch()\r\n    \r\n    //React.useEffect(()=>{\r\n    ////    if(!userInfo.username){\r\n       //     history.push('/login')\r\n     //   }\r\n    //}, [history,userInfo])\r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n       \r\n        dispatch(Address(phone,address,country,\r\n            city,state,postalCode,accountNumber))\r\n    \r\n        history.push(\"/profile\")\r\n       console.log(\"addressCreated\")\r\n         \r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <h1>Add Address</h1>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader/>}\r\n        \r\n        {message && <Message variant=\"danger\">{message}</Message> }\r\n           \r\n\r\n            \r\n             <Form onSubmit={submitHandler}>\r\n             <Form.Group controlId=\"tel\">\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"number\"\r\n                    placeholder=\"mobile number\"\r\n                    value={phone} \r\n                    onChange={(e)=>setPhone(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your Address\"\r\n                    value={address} \r\n                    onChange={(e)=>setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n\r\n                    <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"country\"\r\n                    value={country} \r\n                    onChange={(e)=>setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"state\">\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"state\"\r\n                    value={state} \r\n                    onChange={(e)=>setState(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"City\"\r\n                    value={city} \r\n                    onChange={(e)=>setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postal\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"postal code\"\r\n                    value={postalCode} \r\n                    onChange={(e)=>setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"number\">\r\n                    <Form.Label>Account Number </Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"postal code\"\r\n                    value={accountNumber} \r\n                    onChange={(e)=>setAccountNumber(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Button type=\"submit\" variant=\"primary\"  >Sign Up</Button>\r\n                </Form.Group>\r\n\r\n             </Form>\r\n             \r\n        </FormContainer>\r\n            \r\n        \r\n    );\r\n};\r\n\r\nexport default CreateAddrressScreen;","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader'\r\nimport Message from '../Components/Message'\r\n\r\n\r\n//import { listMyOrders } from '../actions/orderActions\r\n//import {listMyOrders} from '../Actions/orderActions'\r\n\r\nfunction HistoryScreen({ history }) {\r\n\r\n \r\n    const [message, setMessage] = useState('')\r\n    const [email, setEmail] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n  \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n\r\n   \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')}\r\n      \r\n    }, [dispatch,history,userInfo,])\r\n/*\r\n    const submitHandler = ()=>{\r\n        e.preventDefault()\r\n        emailjs.sendForm(`email`,\r\n        apikey.TEMPLATE_ID, e.target,\r\n        apikey.USER_ID).then((result)=>{\r\n            alert(\"message sent, we will get back to u\")\r\n        },(error)=>{\r\n            alert(\"an error occured,please try again\")\r\n        })\r\n    }\r\n    */\r\n\r\n    return (\r\n        <Row>\r\n          \r\n            <Col md={9}>\r\n                <h2>Transaction History</h2>\r\n              \r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>user</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Reference</th>\r\n                                        <th>Account Number</th>\r\n                                        <th>AccountName</th>\r\n                                        <th>Status</th>\r\n                                    \r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    \r\n                                        <tr >\r\n                                            <td>{userInfo.username}</td>\r\n                                            <td>$100,000</td>\r\n                                            <td>ygyry</td>\r\n                                            <td>HBUK4017264178610USD</td>\r\n                                            <td>Helium Accounting Service</td>\r\n                                            <td>Pendin</td>\r\n                                        </tr>\r\n                                \r\n                                </tbody>\r\n                            </Table>\r\n                       \r\n            </Col>\r\n\r\n            <Col md={5}>\r\n            <h4 > contact us</h4>\r\n             <Form onSubmit=\"\">\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Contact us</Form.Label>\r\n                        <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your username here\"\r\n                        value={email} \r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n    \r\n    \r\n                    \r\n                    <Button type=\"submit\" variant=\"primary\">message</Button>\r\n    \r\n                </Form>\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default HistoryScreen\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router ,Route,Switch,} from 'react-router-dom'\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport {Container} from 'react-bootstrap'\nimport LoginScreen from './Screens/LoginScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport Profilescreen from './Screens/ProfileScreen';\n//import QuizScreen from './Screens/QuizScreen';\nimport HomeScreen from './Screens/HomeScreen';\nimport CreateAddrressScreen from './Screens/CreateAddressScreen';\nimport HistoryScreen from './Screens/HistoryScreen'\n\nfunction App() {\n  return (\n    <Router>\n    <Header/>\n    <main className=\"py-3\">\n      <Container>\n        <Route path=\"/\" component={HomeScreen} exact/>\n       \n        <Route path=\"/login\" component={LoginScreen}/>\n        <Route path=\"/createAddress\" component={CreateAddrressScreen}/>\n        <Route path='/register' component={RegisterScreen}/>\n        <Route path='/profile' component={HistoryScreen}/>\n        \n\n\n      </Container>\n\n    </main>\n    <Footer/>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer,userRegisterReducer,userCreateAddressReducer } from './Reducers/userReducer';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    userLogin : userLoginReducer,\r\n    userRegister: userRegisterReducer ,\r\n    userAddress: userCreateAddressReducer,\r\n \r\n\r\n})\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ?\r\n    JSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\nconst initialState = {\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n    export default store","import {\r\n    USER_LOGIN_REQUEST,\r\nUSER_LOGIN_SUCCESS,USER_LOGIN_FAIL,\r\nUSER_LOGOUT,\r\n\r\n\r\nUSER_REGISTER_SUCCESS,\r\nUSER_REGISTER_REQUEST,\r\nUSER_REGISTER_FAIL,\r\n\r\nUSER_CREATE_ADRESS_SUCCESS,\r\nUSER_CREATE_ADRESS_REQUEST,\r\nUSER_CREATE_ADRESS_FAIL,\r\n\r\n\r\nUSER_DETAILS_REQUEST,\r\nUSER_DETAILS_SUCCESS,\r\nUSER_DETAILS_FAIL,\r\nUSER_DETAILS_RESET,\r\n\r\n} from  '../Constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n                return {loading:false, userInfo:action.payload}\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n            \r\n\r\n        case USER_LOGOUT:\r\n            return {}    \r\n            \r\n            \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n                return {loading:false, userInfo:action.payload}\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}    \r\n                \r\n            \r\n       \r\n            \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userCreateAddressReducer = (state = {}, action)=>{\r\n    switch (action.type) {\r\n        case USER_CREATE_ADRESS_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_CREATE_ADRESS_SUCCESS:\r\n                return {loading:false, userAddress:action.payload}\r\n\r\n        case USER_CREATE_ADRESS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}      \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport {Provider} from  'react-redux'\nimport './bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}